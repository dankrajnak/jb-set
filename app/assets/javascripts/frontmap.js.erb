var width = window.innerWidth,
    height = window.innerHeight,
    offset = 30;

var velocity = .01,
  t0 = Date.now();

d3.select("#front-map").attr("width", width)
  .attr("height", height);

d3.select("header").attr("style", "height: "+ (window.innerHeight)+"px;");

var projection = d3.geoWinkel3()
    .scale(height/Math.PI)
    .translate([width/2, height/2+offset]);

var context = d3.select("#front-map").node().getContext("2d");


var path = d3.geoPath()
    .projection(projection)
    .context(context);

queue()
  .defer(d3.json, "<%= image_url("world-110m.json") %>")
  .defer(d3.tsv, "<%= image_url("jb-countries.tsv") %>")
  .defer(d3.json, "/surveys/2.json")
  .await(ready);

function ready(error, world, jb, survey) {
  if (error) throw error;

  var land = topojson.feature(world, world.objects.land);
  var countries = topojson.feature(world, world.objects.countries).features;
  var borders = topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; });
  var n = countries.length;

  countries = countries.filter(function(d) {
    return jb.some(function(n) {
      if (d.id == n.id) return d.name = n.name;
    });
  });

  var cisvcolors = ["#336699", "#FF6633", "#FFCC33", "#CC0066", "#FF3333", "#FF9933", "#339933", "#009966"];
  var colorIndex = 0;

  countries.forEach(function(country, index){
      country.completed = false;
      if(++colorIndex == cisvcolors.length){
          colorIndex = 0;
      }
      country.color = cisvcolors[colorIndex];

      survey.completions.some(function(e){
          if(e.country == country.name && e.questions.every(function(q){return q.answer != "" && q.answer != "/No Answer/"}))
              return country.completed = true;
      })
  });


  d3.timer(function(){
    var t = Date.now()-t0;
    projection.rotate([width/2+velocity*t]);
    context.fillStyle = "#FFF";
    context.clearRect(0, 0, width ,height);

    context.strokeStyle = "#FFF";
    context.lineWidth = .5;
    countries.forEach(function(country){
      if(country.completed) {
          context.fillStyle = country.color;
          context.beginPath();
          path(country);
          context.fill()
          context.stroke();
      }


      context.beginPath();
      path(country);
      context.stroke();

    });

  });

}
